function button_debug_info(){console.log("+++ Begin debug_info()");var e=$("#zaehler_chart").highcharts();$(e.series).each(function(e,t){t.visible&&console.log("serie["+e+"] name="+t.name+" id="+t.options.id)});var t;for(var n in localStorage)if(t=localStorage.getItem(n),"on"==t){var r=e.get(n);console.log("LocalStorage key="+n+" item="+t+" serie="+r)}console.log("+++ End debug_info()")}function initlocalStorage(){Modernizr.localstorage?console.log("window.localStorage is available!"):console.log(" no native support for HTML5 storage :( maybe try dojox.storage or a third-party solution")}function button_localStorageClear(){localStorage.clear()}function show_storaged_series(){var e=$("#zaehler_chart").highcharts();for(var t in localStorage){var n;if(n=localStorage.getItem(t),"on"==n){var r=t.substr(1),i=e.get(r);i.select(),console.log(n+"  key="+t+" key.substr(1)="+t.substr(1)+" serie="+i.name)}}button_verbrauch()}function log_object(e){var t="";for(var n in e)t+=n+": "+e[n]+"; ";console.log("object="+t)}function button_nostacking(){console.log("click button_nostacking");var e=$("#zaehler_chart").highcharts();delete e.yAxis[0].usePercentage,$(e.series).each(function(t,n){this.visible&&0>$.inArray(n.name,visibleSeriesIndex)&&(console.log("button_stacking(): serie.name="+n.name+"serie.index="+n.index),e.series[n.index].update({stacking:0},!0))})}function button_percent(){console.log("click button_percent");var e=$("#zaehler_chart").highcharts();delete e.yAxis[0].usePercentage,$(e.series).each(function(e,t){this.visible&&0>$.inArray(t.name,visibleSeriesIndex)&&this.update({stacking:"percent"},!1)}),e.redraw()}function addverbrauch(e,t){var n=new Array,r=t.data[0].y;$(t.data).each(function(e,t){var i=Math.round(10*(t.y-r))/10;r=t.y,n.push([t.x,i])}),e.addSeries({id:"V"+t.options.id,name:"Verbrauch "+t.name,data:n,yAxis:1,type:"column",stack:1,stacking:"normal",pointRange:t.pointRange},!1),console.log("addverbrauch() serie.options.id="+t.options.id),localStorage.setItem("V"+t.options.id,"on"),console.log("localStorage.setItem(V"+t.options.id+', "on")'),button_debug_info()}function button_verbrauch(){var e=$("#zaehler_chart").highcharts();$(e.series).each(function(e,t){t.visible&&t.options.id.match(/V/)&&(console.log("remove serie.options.id="+t.options.id),localStorage.setItem(t.options.id,"off"),t.remove())}),selectedSeries=e.getSelectedSeries(),selectedSeries.map(function(t){console.log("button_verbrauch(): selectedSeries serie.name="+t.name),"on"!=localStorage.getItem("V"+t.options.id),addverbrauch(e,t)}),e.redraw()}var visibleSeriesIndex=new Array;$(document).ready(function(){initlocalStorage();var e={chart:{events:{addSeries:function(e){console.log("series added: event.options.name="+e.options.name+" event.options.id="+e.options.id)},click:function(e){console.log("highcharts click event="+e)},drilldown:function(e){console.log("highcharts drilldown event="+e)},drillup:function(e){console.log("highcharts drillup event="+e)},load:function(e){console.log("highcharts load event="+e),show_storaged_series()},selection:function(e){console.log("highcharts selection event="+e)},redraw:function(e){console.log("highcharts redraw event="+e)},checkboxClick:function(e){console.log("highcharts checkboxClick event="+e)}},zoomType:"xy",renderTo:"zaehler_chart"},title:{text:"Zählerwerte"},xAxis:{type:"datetime"},yAxis:[{title:{text:"Zählerstand in Kilowattstunden [KWh]"}},{title:{text:"Verbrauch pro Monat in Kilowattstunden [KWh]"},opposite:!0}],tooltip:{pointFormat:'{series.options.id}: <span style="color:{series.color}">{series.name}</span>: <b>{point.y} kWh</b> ({point.percentage:.0f}%) Total: {point.stackTotal:.1f} kWh<br/>'},plotOptions:{series:{showCheckbox:!0,pointRange:2592e6,events:{checkboxClick:function(){return this.select(),button_verbrauch(),!1}}}},series:[]};$.getJSON("zaehlers/normiertewerte",function(t){e.series=t;var n=new Highcharts.Chart(e);$(n.series).each(function(){this.visible&&!this.options.id.match(/V/)&&(this.setVisible(!1,!1),localStorage.setItem(this.options.id,"off"))})})});